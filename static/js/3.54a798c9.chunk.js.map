{"version":3,"sources":["components/hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStatetoPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","styles","descriptionBlock","photos","large","src","fullName","aboutMe","Preloader","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","MyPosts","postsElements","posts","map","p","postsBlock","values","addPost","newPostText","MyPostsContainer","ProfilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.54a798c9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStatetoPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render () {\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n\r\n  let  ConnectAuthRedirectComponent = connect(mapStatetoPropsForRedirect)(RedirectComponent)\r\n  return ConnectAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1Of_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2ULcJ\",\"postsBlock\":\"MyPosts_postsBlock__1CbEa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3aFFu\"};","import React from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n  \r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status\r\n  }\r\n\r\n  activateEditMode = () => {\r\n    this.setState( {\r\n      editMode: true\r\n    })\r\n  }\r\n\r\n  deActivateEditMode = () => {\r\n    this.setState( {\r\n      editMode: false\r\n    });\r\n    this.props.updateStatus(this.state.status);\r\n  }\r\n\r\n  onStatusChange = (e) => {\r\n    this.setState({\r\n      status: e.currentTarget.value\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status != this.props.status) {\r\n      this.setState({\r\n        status: this.props.status\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n          {!this.state.editMode &&\r\n            <div>\r\n              <span onDoubleClick={ this.activateEditMode }>{this.props.status || 'Статуса нема('}</span>\r\n            </div>\r\n          }\r\n          {this.state.editMode &&\r\n            <div>\r\n              <input onChange={this.onStatusChange} autoFocus={true} \r\n                     onBlur={ this.deActivateEditMode } value={this.state.status}/>\r\n            </div>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default ProfileStatus;","import React, { useEffect, useState } from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  \r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n      setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n      setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n      setEditMode(false);\r\n      props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return(\r\n      <div>\r\n          {!editMode &&\r\n            <div>\r\n              <span onDoubleClick={ activateEditMode }>{status || 'Статуса нема('}</span>\r\n            </div>\r\n          }\r\n          {editMode &&\r\n            <div>\r\n              <input onChange={onStatusChange} autoFocus={true} \r\n                     onBlur={ deactivateEditMode } value={status}/>\r\n            </div>\r\n          }\r\n      </div>\r\n    )\r\n          \r\n  \r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import Preloader from '../../common/Preloader/Preloader';\r\nimport styles from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  if (!props.profile) {\r\n    return <Preloader/>\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n        {/* <div>\r\n          <img src=\"http://countervest.com/wp-content/uploads/2020/05/tech-stock-image.jpg\"></img>\r\n        </div> */}\r\n        <div className={styles.descriptionBlock}>\r\n          { props.profile.photos.large == null ? \r\n            <img src=\"https://ru.wargaming.net/clans/media/clans/emblems/cl_215/425215/emblem_195x195.png\"></img> \r\n            : <img src={props.profile.photos.large}></img>\r\n          }\r\n          <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n          <div> Имя  <b>{props.profile.fullName}</b> </div>\r\n          <div> Обо мне  <b>{props.profile.aboutMe}</b> </div>\r\n        \r\n          \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import styles from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return( \r\n      <div className={styles.item}>\r\n        <img src=\"https://ru.wargaming.net/clans/media/clans/emblems/cl_215/425215/emblem_195x195.png\" />\r\n          { props.message }\r\n          <span> { props.likesCount } like</span>\r\n      </div>  \r\n      \r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport styles from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  let postsElements = props.posts.map( p =>  <Post message={p.message} likesCount={p.likesCount}/> )\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  return( \r\n    <div className={styles.postsBlock}>\r\n        <h3>My posts</h3>\r\n      <AddPostFormRedux onSubmit={onAddPost}/>\r\n      <div className={styles.posts}>\r\n        {postsElements}\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nconst AddPostForm = (props) => {\r\n  \r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <div>\r\n          <Field component={Textarea} name=\"newPostText\" validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n          <button>Add post</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"ProfileAddPostForm\"})(AddPostForm);\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.ProfilePage.posts,\r\n    newPostText: state.ProfilePage.newPostText\r\n  }\r\n} \r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n\r\n  return(\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nclass ProfileContainer extends React.Component{\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      //userId = 20174;\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render () {\r\n    return(\r\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStatetoProps = (state) => ({\r\n  profile: state.ProfilePage.profile,\r\n  status: state.ProfilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStatetoProps, {getUserProfile, getStatus, updateStatus}),\r\n  withRouter,\r\n  withAuthRedirect,\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}