{"version":3,"sources":["components/hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStatetoPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","className","styles","dialog","active","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeHolder","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","newMessageText","dialogsItems","values","sendMessage","compose","dispatch","addMessageActionCreator"],"mappings":"6MAIIA,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,SAGRE,EAAmB,SAACC,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUC,GAAI,eAHJ,GACbC,IAAML,WAStC,OADoCM,YAAQX,EAARW,CAAoCL,K,oBChB1EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,uHCWnKC,EARI,SAACN,GAClB,OACE,yBAAKO,UAAWC,IAAOC,OAAS,IAAMD,IAAOE,QAC3C,kBAAC,IAAD,CAAST,GAAI,YAAcD,EAAMW,IAAjC,IAAuCX,EAAMY,KAA7C,OCGSC,EAPC,SAACb,GAEf,OACE,yBAAKO,UAAWC,IAAOC,QAAST,EAAMc,QAAtC,M,kCCEEC,EAAcC,YAAiB,IA4C/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAhBL,SAAClB,GACtB,OACE,0BAAMoB,SAAUpB,EAAMqB,cACpB,6BACE,6BACE,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAASX,GAAcH,KAAK,iBAAiBe,YAAY,wBAElG,6BACE,8CAUKC,EA5CC,SAAC5B,GAEf,IAAIP,EAAQO,EAAM6B,YACdC,EAAkBrC,EAAMsC,QAAQC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,GAAIsB,EAAEtB,GAAIuB,IAAKD,EAAEtB,GAAIC,KAAMqB,EAAErB,UACnFuB,EAAmB1C,EAAM2C,SAASJ,KAAK,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAE1B,QAC/DlB,EAAM6C,eAO3B,OAEE,yBAAK/B,UAAWC,IAAOuB,SACrB,yBAAKxB,UAAWC,IAAO+B,cACpBT,GAEH,yBAAKvB,UAAWC,IAAO4B,UACpBD,GAEH,kBAAClB,EAAD,CAAqBG,SAdL,SAACoB,GACnBxC,EAAMyC,YAAYD,EAAOF,qBCKdI,sBAAQvC,aAhBC,SAACV,GAEvB,MAAO,CACLoC,YAAapC,EAAMoC,gBAGI,SAACc,GAE1B,MAAO,CACLF,YAAa,SAACH,GACZK,EAASC,YAAwBN,SAM8B1C,IAAtD8C,CAAwEd","file":"static/js/4.bed13372.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStatetoPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render () {\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n\r\n  let  ConnectAuthRedirectComponent = connect(mapStatetoPropsForRedirect)(RedirectComponent)\r\n  return ConnectAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1m75O\",\"dialogsItems\":\"Dialogs_dialogsItems__3roV8\",\"active\":\"Dialogs_active__1SJyD\",\"messages\":\"Dialogs_messages__1AddN\",\"message\":\"Dialogs_message__2igf_\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n  return(\r\n    <div className={styles.dialog + ' ' + styles.active}>\r\n      <NavLink to={\"/dialogs/\" + props.id}> {props.name} </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport styles from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n \r\n  return(\r\n    <div className={styles.dialog}>{props.message} </div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../utils/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\ndebugger\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage; \r\n  let dialogsElements = state.dialogs.map( d => <DialogItem id={d.id} key={d.id} name={d.name} /> )\r\n  let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id}/>)\r\n  let newMessageText = state.newMessageText;\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageText)\r\n  }\r\n\r\n \r\n  return(\r\n    \r\n    <div className={styles.dialogs}>\r\n      <div className={styles.dialogsItems}>\r\n        {dialogsElements} \r\n      </div>\r\n      <div className={styles.messages}>\r\n        {messagesElements}\r\n      </div>\r\n      <AddMessageFormRedux onSubmit={addNewMessage}/>  \r\n    </div>\r\n  )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <div>\r\n          <Field component={Textarea} validate={[required,maxLength50]} name=\"newMessageText\" placeHolder=\"Enter your message\"/>\r\n        </div>\r\n        <div>\r\n          <button>Send</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { addMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport Dialogs from './Dialogs';\r\n\r\ndebugger\r\nconst mapStateToProps = (state) => {\r\n  debugger\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n} \r\nconst mapDispatchToProps = (dispatch) => {\r\n  debugger\r\n  return {\r\n    sendMessage: (newMessageText) => {\r\n      dispatch(addMessageActionCreator(newMessageText))\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);"],"sourceRoot":""}